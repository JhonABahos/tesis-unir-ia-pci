#modules.gpt4all_report.py

from datetime import datetime

from config import MODEL_PATH, TEMPERATURE, MAX_TOKENS
from gpt4all import GPT4All

def generar_reporte_pavimento(pci, damage):
    """
    Genera un reporte técnico sobre el estado del pavimento usando GPT4All.
    """
    # Inicializa apuntando al directorio y especifica el nombre del modelo con extensión .gguf
    #gpt = GPT4All(model_name="gpt4all-falcon-newbpe-q4_0.gguf", model_path="D:/Proyectos_BC/ia_tesis_pci/models",allow_download=False)
    gpt = GPT4All(model_name="Meta-Llama-3-8B-Instruct.Q4_0.gguf", model_path="D:/Proyectos_BC/ia_tesis_pci/models",
                  allow_download=False)

    # Prompt con los datos del pavimento
    prompt = (
        f"Write a technical report about the pavement condition in English. "
        f"This report must be written exclusively in English, with no Spanish or other languages included. "
        f"The pavement has a PCI of {pci} and presents the following damage: {damage}. "
        f"Include maintenance recommendations and explain the annotations in detail."
    )

    # Mide el tiempo de inicio
    start_time = datetime.now()

    # Generación de la respuesta
    respuesta = gpt.generate(prompt, max_tokens=MAX_TOKENS, temp=TEMPERATURE)

    # Mide el tiempo de finalización
    end_time = datetime.now()

    # Calcula el tiempo transcurrido
    elapsed_time = end_time - start_time
    seconds = elapsed_time.total_seconds()  # Convierte a segundos con decimales

    # Conversión a minutos y segundos
    minutes, seconds_only = divmod(seconds, 60)

    # Agrega el tiempo transcurrido al final de la respuesta
    respuesta += f"\n\n(Generation time: {int(minutes)} minutes and {seconds_only:.2f} seconds | Total: {seconds:.2f} seconds)"

    return respuesta


if __name__ == "__main__":
    # Datos de prueba
    pci = 90
    damage = "longitudinal cracks and transverse cracks on the pavement"

    # Generación de reporte
    reporte = generar_reporte_pavimento(pci, damage)
    print("Report generated by GPT4All:\n")
    print(reporte)
